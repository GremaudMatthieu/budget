# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Domain/Envelope/Entity/'
            - '../src/Domain/User/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Application\Envelope\CommandHandler\CreateEnvelopeCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\Application\Envelope\CommandHandler\EditEnvelopeCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\Application\Envelope\CommandHandler\DeleteEnvelopeCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\Application\Envelope\QueryHandler\ShowEnvelopeQueryHandler:
        tags: [ 'messenger.message_handler' ]

    App\Application\Envelope\QueryHandler\ListEnvelopesQueryHandler:
        tags: [ 'messenger.message_handler' ]

    App\Application\Envelope\QueryHandler\GetEnvelopeByTitleQueryHandler:
        tags: [ 'messenger.message_handler' ]

    App\Application\User\CommandHandler\CreateUserCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\Application\User\QueryHandler\ShowUserQueryHandler:
        tags: [ 'messenger.message_handler' ]

    App\Application\User\QueryHandler\GetUserAlreadyExistsQueryHandler:
        tags: [ 'messenger.message_handler' ]

    App\Infra\Http\Rest\Envelope\EventListener\EnvelopeEditListener:
        tags:
            - { name: 'doctrine.event_listener', event: 'preUpdate' }

    Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface:
        alias: 'security.password_hasher'

    App\Infra\Http\Rest\User\Repository\UserQueryRepository:
        arguments:
            $finder: '@fos_elastica.finder.user'

    App\Infra\Http\Rest\Envelope\Repository\EnvelopeQueryRepository:
        arguments:
            $finder: '@fos_elastica.finder.envelope'

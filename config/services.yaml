parameters:

services:
    _defaults:
        autowire: true
        autoconfigure: true
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/UserManagement/Infrastructure/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    PhpAmqpLib\Connection\AMQPStreamConnection:
        arguments:
            $host: '%env(RABBITMQ_HOST)%'
            $port: '%env(RABBITMQ_PORT)%'
            $user: '%env(RABBITMQ_USER)%'
            $password: '%env(RABBITMQ_PASSWORD)%'

    App\EnvelopeManagement\Application\CommandHandler\CreateEnvelopeCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\CommandHandler\NameEnvelopeCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\CommandHandler\CreditEnvelopeCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\CommandHandler\DebitEnvelopeCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\CommandHandler\DeleteEnvelopeCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\QueryHandler\ShowEnvelopeQueryHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\QueryHandler\ListEnvelopesQueryHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\QueryHandler\GetEnvelopeByTitleQueryHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\EventHandler\EnvelopeCreatedEventHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\EventHandler\EnvelopeNamedEventHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\EventHandler\EnvelopeDebitedEventHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\EventHandler\EnvelopeCreditedEventHandler:
        tags: [ 'messenger.message_handler' ]

    App\EnvelopeManagement\Application\EventHandler\EnvelopeDeletedEventHandler:
        tags: [ 'messenger.message_handler' ]

    App\UserManagement\Application\CommandHandler\CreateUserCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\UserManagement\Application\CommandHandler\EditUserCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\UserManagement\Application\QueryHandler\ShowUserQueryHandler:
        tags: [ 'messenger.message_handler' ]

    App\UserManagement\Application\QueryHandler\GetUserAlreadyExistsQueryHandler:
        tags: [ 'messenger.message_handler' ]

    App\UserManagement\Application\CommandHandler\ChangeUserPasswordCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\UserManagement\Application\CommandHandler\RequestPasswordResetCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\UserManagement\Application\CommandHandler\ResetPasswordCommandHandler:
        tags: [ 'messenger.message_handler' ]

    App\UserManagement\Application\QueryHandler\GetUserByPasswordResetTokenQueryHandler:
        tags: [ 'messenger.message_handler' ]

    Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface:
        alias: 'security.password_hasher'

    App\UserManagement\Infrastructure\Repository\UserQueryRepository:
        arguments:
            $finder: '@fos_elastica.finder.user'

    App\EnvelopeManagement\Infrastructure\EventListener\ExceptionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }
    
    App\UserManagement\Infrastructure\EventListener\ExceptionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception' }

    App\UserManagement\Domain\Factory\CreateUserFactory:
        arguments:
            $userClass: App\UserManagement\Infrastructure\Entity\User